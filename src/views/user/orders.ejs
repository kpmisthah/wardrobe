<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Your Orders</title>
    <link rel="stylesheet" href="css/orders.css" />
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <style>
      .status-badge {
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 0.9em;
        font-weight: 500;
      }

      .status-badge.pending {
        background-color: #fff3cd;
        color: #856404;
        border: 1px solid #ffeeba;
      }

      .payment-pending {
        background-color: #ffe5e5;
        color: #dc3545;
        padding: 10px;
        margin: 10px 0;
        border-radius: 4px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .retry-payment-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.2s;
      }

      .retry-payment-btn:hover {
        background-color: #218838;
      }

      .action-buttons {
        display: flex;
        gap: 10px;
      }

      .btn-cancel {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 4px;
        cursor: pointer;
      }

      .btn-cancel:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
      }

      .order-details {
        margin: 10px 0;
        padding: 15px;
        border: 1px solid #dee2e6;
        border-radius: 4px;
      }

      .payment-info {
        font-size: 0.9em;
        color: #6c757d;
        margin-top: 5px;
      }

      /* Mobile Responsiveness Styles */
      @media (max-width: 768px) {
        .sidebar {
          display: none;
        }

        .main-content {
          width: 100%;
          margin: 0;
          padding: 15px;
        }

        .table-responsive {
          overflow-x: auto;
        }

        .table {
          width: 100%;
        }

        .table thead {
          display: none;
        }

        .table tbody tr {
          display: block;
          margin-bottom: 20px;
          border: 1px solid #ddd;
        }

        .table tbody td {
          display: block;
          text-align: right;
          border-bottom: 1px solid #ddd;
          padding: 10px;
          position: relative;
        }

        .table tbody td::before {
          content: attr(data-label);
          position: absolute;
          left: 10px;
          font-weight: bold;
        }

        .action-buttons {
          flex-direction: column;
          gap: 10px;
        }

        .action-buttons .btn {
          width: 100%;
        }

        .pagination {
          flex-wrap: wrap;
          justify-content: center;
        }

        .pagination .page-item {
          margin: 5px;
        }
      }
    </style>
  </head>
  <body>
    <div class="container-fluid">
      <div class="row">
        <!-- Mobile Navigation Dropdown -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light d-md-none">
          <div class="container-fluid">
            <a class="navbar-brand" href="#">Menu</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mobileNavbar">
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="mobileNavbar">
              <ul class="navbar-nav">
                <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                <li class="nav-item"><a class="nav-link" href="/myaccount">Dashboard</a></li>
                <li class="nav-item"><a class="nav-link active" href="/order">Orders</a></li>
                <li class="nav-item"><a class="nav-link" href="/updateProfile">Update Profile</a></li>
                <li class="nav-item"><a class="nav-link" href="/wallet">Wallet</a></li>
                <li class="nav-item"><a class="nav-link" href="/getAddress">My Address</a></li>
              </ul>
            </div>
          </div>
        </nav>

        <!-- Desktop Sidebar -->
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
          <div class="sidebar-sticky">
            <ul class="nav flex-column">
              <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
              <li class="nav-item"><a class="nav-link" href="/myaccount">Dashboard</a></li>
              <li class="nav-item"><a class="nav-link active" href="/order">Orders</a></li>
              <li class="nav-item"><a class="nav-link" href="/updateProfile">Update Profile</a></li>
              <li class="nav-item"><a class="nav-link" href="/wallet">Wallet</a></li>
              <li class="nav-item"><a class="nav-link" href="/getAddress">My Address</a></li>
            </ul>
          </div>
        </nav>
  
        <!-- Main Content -->
        <main role="main" class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content">
          <h2 class="mt-3">Your Orders</h2>
  
          <% if (orders && orders.length > 0) { %>
          <!-- Responsive Table -->
          <div class="table-responsive">
            <table class="table table-striped table-hover">
              <thead class="table-dark">
                <tr>
                  <th>Order ID</th>
                  <th>Date</th>
                  <th>Status</th>
                  <th>Payment Method</th>
                  <th>Payment Status</th>
                  <th>Discount</th>
                  <th>Total</th>
                  <th>Action</th>
                  <th>Details</th>
                </tr>
              </thead>
              <tbody>
                <% orders.forEach((order) => { %>
                <% if (order.orderedItems && order.orderedItems.length > 0) { %>
                <tr data-order-id="<%= order._id %>">
                  <td data-label="Order ID"><%= order.orderId %></td>
                  <td data-label="Date"><%= order.invoiceDate.toLocaleDateString('en-IN') %></td>
                  <td data-label="Status">
                    <span class="status-badge <%= order.status.toLowerCase() %>">
                      <%= order.status %>
                    </span>
                  </td>
                  <td data-label="Payment Method"><%= order.paymentMethod %></td>
                  <td data-label="Payment Status">
                    <% if (order.paymentStatus === 'Pending' && order.paymentMethod == 'razorpay' && order.status !== 'Delivered' && order.status !== 'Canceled') { %>
                    <div class="payment-pending">
                      Payment Pending
                      <button
                        class="retry-payment-btn btn btn-success btn-sm"
                        onclick="retryPayment('<%= order.paymentMethod %>', '<%= order.finalAmount || order.totalPrice %>', '<%= order._id %>')"
                      >
                        Complete Payment
                      </button>
                    </div>
                    <% } else if (order.paymentMethod === 'COD') { %>
                    <span
                      class="status-badge <%= order.paymentStatus.toLowerCase() %>"
                    >
                      <%= order.paymentStatus %>
                    </span>
                    <% } else { %>
                    <span
                      class="status-badge <%= order.paymentStatus.toLowerCase() %>"
                    >
                      <%= order.paymentStatus %>
                    </span>
                    <% } %>
                  </td>
                  <td data-label="Discount">₹ <%= order.discount %></td>
                  <td data-label="Total">₹ <%= order.finalAmount || order.totalPrice %></td>
                  <td data-label="Action">
                    <div class="action-buttons">
                      <% if (order.status === 'Pending' || order.status === 'Shipped') { %>
                      <button
                        type="button"
                        class="btn btn-danger btn-sm"
                        onclick="canceled('<%= order._id %>')"
                      >
                        Cancel Order
                      </button>
                      <% } else if (order.status === 'Canceled') { %>
                      <button type="button" class="btn btn-secondary btn-sm" disabled>
                        Canceled
                      </button>
                      <% } %>
                      <% if (order.status === 'Delivered') { %>
                      <form
                        action="/returnOrder/<%= order._id %>"
                        method="POST"
                        style="display: inline-block; margin-top: 5px"
                      >
                        <button
                          type="submit"
                          class="btn btn-success btn-sm"
                          onclick="return confirmReturn('<%= order._id %>')"
                        >
                          Return
                        </button>
                      </form>
                      <% } %>
                    </div>
                  </td>
                  <td data-label="Details">
                    <a
                      href="/user/view-order/<%= order._id %>"
                      class="btn btn-primary btn-sm"
                    >
                      View Details
                    </a>
                  </td>
                </tr>
                <% } %>
                <% }) %>
              </tbody>
            </table>
          </div>
  
          <!-- Pagination -->
          <nav aria-label="Page navigation" class="pagination-container mt-4">
            <ul class="pagination justify-content-center">
              <% for (let i = 1; i <= totalpages; i++) { %>
              <li class="page-item <%= page === i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
              </li>
              <% } %>
            </ul>
          </nav>
          <% } else { %>
          <div class="no-orders text-center mt-5">
            <p class="fs-4">You haven't placed any orders yet.</p>
            <a href="/shop" class="shop-now-btn btn btn-primary btn-lg mt-3">Start Shopping</a>
          </div>
          <% } %>
        </main>
      </div>
    </div>
    <script>
      async function canceled(orderId) {
        const confirmation = await Swal.fire({
          title: "Are you sure?",
          text: "Do you want to cancel this order?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, cancel it!",
          cancelButtonText: "No, keep it",
        });

        if (confirmation.isConfirmed) {
          try {
            const response = await fetch("/order/cancel", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ orderId }),
            });

            const data = await response.json();

            if (data.success) {
              await Swal.fire({
                title: "Canceled!",
                text: "Order canceled successfully.",
                icon: "success",
                confirmButtonColor: "#3085d6",
              });
              const cancelButton = document.getElementById(`cancel-button-${productId}`);
            if (cancelButton) {
                cancelButton.innerText = 'Cancelled';
                cancelButton.disabled = true;
                cancelButton.classList.remove('btn-cancel');
                cancelButton.classList.add('badge', 'bg-danger');
            }
            } else {
              await Swal.fire({
                title: "Error!",
                text: data.message || "Failed to cancel order.",
                icon: "error",
                confirmButtonColor: "#d33",
              });
            }
          } catch (error) {
            console.error("Error:", error);
            await Swal.fire({
              title: "Oops!",
              text: "An error occurred while canceling the order.",
              icon: "error",
              confirmButtonColor: "#d33",
            });
          }
        }
      }

      async function retryPayment(paymentMethod, amount, originalOrderId) {
        try {
          const response = await fetch(`/retry-payment`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ paymentMethod, amount, originalOrderId }),
          });

          if (response.ok) {
            const { razorpayOrderId, razorpayKey, amount } =
              await response.json();
            const options = {
              key: razorpayKey,
              amount: amount * 100,
              currency: "INR",
              name: "wadrob",
              description: "Order Payment Retry",
              order_id: razorpayOrderId,
              handler: async function (response) {
                try {
                  const saveResponse = await fetch("/complete-retry-payment", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                      paymentId: response.razorpay_payment_id,
                      razorpayOrderId: razorpayOrderId,
                      signature: response.razorpay_signature,
                      originalOrderId: originalOrderId,
                      amount: amount,
                    }),
                  });
                  if (saveResponse.ok) {
                    const result = await saveResponse.json();
                    // await swal(
                    //   "Success",
                    //   "Payment completed successfully!",
                    //   "success"
                    // );
                    window.location.href =
                      result.redirectUrl || "/order-confirmation";
                  }
                } catch (error) {
                  console.error("Error saving payment:", error);
                  swal(
                    "Error",
                    "Failed to complete payment. Please contact support.",
                    "error"
                  );
                }
              },
              prefill: {
                name: "user",
                email: "email",
                contact: "contact",
              },
              theme: { color: "#3399cc" },
              modal: {
                ondismiss: function () {
                  console.log("Payment modal closed without completion");
                },
              },
            };
            const rzp = new Razorpay(options);
            rzp.open();
            // window.location.reload()
            rzp.on("payment.failed", function (response) {
              swal("Error", "Payment failed. Please try again.", "error");
            });
          }
        } catch (error) {
          console.error("Error initiating retry payment:", error);
          swal(
            "Error",
            "Failed to initiate payment. Please try again.",
            "error"
          );
        }
      }
      function confirmReturn(orderId) {
        Swal.fire({
          title: "Are you sure?",
          text: "You want to return this order!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, return it!",
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = `/orders`;
          }
        });
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>